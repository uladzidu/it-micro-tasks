import axios from 'axios'
import React, { useEffect, useState } from 'react'
import ReactDOM from 'react-dom/client'

// Types
type PhotoType = {
    albumId: number
    id: number
    title: string
    url: string
    thumbnailUrl: string
}
// Api
const instance = axios.create({
    baseURL: 'https://jsonplaceholder.typicode.com/'
})

const photosAPI = {
    getPhotos(page: number) {
        // return instance.get<PhotoType[]>(`photos?_limit=2?_page${page}`)
        return instance.get<PhotoType[]>(`photos?_page${page}&_limit=2`)
    }
}
// App
const buttons = [
    {id: 1, title: '1'},
    {id: 2, title: '2'},
    {id: 3, title: '3'},
]

export const App = () => {

    const [photos, setPhotos] = useState<PhotoType[]>([])
    const [currentPage, setCurrentPage] = useState(1)

    useEffect(() => {
        photosAPI.getPhotos(currentPage)
            .then((res) => {
                setPhotos(res.data)
            })
    }, [currentPage])

    const setPageHandler = (page: number) => {
        setCurrentPage(page)
    };

    return (
        <>
            <h1>üì∏ –°–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–∫</h1>
            {/* Photos */}
            {
                photos.map(p => {
                    return <div style={{marginBottom: '25px'}} key={p.id}>
                        <b>title</b>: {p.title}
                        <div><img src={p.thumbnailUrl} alt=""/></div>
                    </div>
                })
            }

            {/* Buttons */}
            {
                buttons.map(b => {
                    return (
                        <button key={b.id}
                                style={b.id === currentPage ? {backgroundColor: 'lightblue'} : {}}
                                onClick={() => setPageHandler(b.id)}>
                            {b.title}
                        </button>
                    )
                })
            }
        </>
    )
}

// –û–ø–∏—Å–∞–Ω–∏–µ:
// –ü–∞–≥–∏–Ω–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.
// –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º, –∫–æ–Ω—Ç–µ–Ω—Ç (–æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ç–æ–∫) –¥–æ–ª–∂–µ–Ω –º–µ–Ω—è—Ç—å—Å—è.
// –ü–æ–¥—Å–∫–∞–∑–∫–∞. –í –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –∫–æ–¥–∞ –¥–æ–ø—É—â–µ–Ω–æ 2 –æ—à–∏–±–∫–∏.
// –ó–∞–¥–∞—á–∞: –Ω–∞–π—Ç–∏ —ç—Ç–∏ –æ—à–∏–±–∫–∏, –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.
// –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: const [currentPage, setCurrentPage] = useState(page)



